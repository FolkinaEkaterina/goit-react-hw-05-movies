{"version":3,"file":"static/js/592.b4c29224.chunk.js","mappings":"gMAEaA,E,QAAeC,GAAAA,IAAH,sE,SCiBzB,EAjBe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,OAAQ,IACRC,MAAO,IACPC,OAAQ,EACRC,MAAM,OACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,gGCfYC,EAAOT,EAAAA,GAAAA,GAAH,wRAYJU,EAAOV,EAAAA,GAAAA,GAAH,qNAOJW,EAAMX,EAAAA,GAAAA,IAAH,8IAMHY,EAAQZ,EAAAA,GAAAA,EAAH,oG,0ECClB,EAvBkB,SAAC,GAAgB,IAAda,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAACN,EAAD,UACGI,EAAOG,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MACxBC,EAASF,EACX,mCAAqCA,EACrCG,EACJ,OACE,SAACX,EAAD,WACE,UAAC,KAAD,CAAMY,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMV,GAA1C,WACE,SAACH,EAAD,CAAKc,IAAKL,EAAQM,IAAKP,KACvB,SAACP,EAAD,UAAQO,QAHDF,EAOd,OAIR,C,iHCSD,UA5Ba,WACX,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAUM,EAAKC,QAChB,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAYD,EAAIE,QACjB,IAEAC,SAAQ,WACPV,GAAa,EACd,GACJ,GAAE,KAGD,UAAC,KAAD,WACGD,IAAa,SAAC,IAAD,KACd,SAAC,KAAD,8BACA,SAAC,IAAD,CAAWhB,OAAQA,MAGxB,C,mMC/BK4B,EAAU,mCACVC,EAAW,gCACXC,EAAkB,uDAClBC,EAAe,mCAERZ,EAAiB,mCAAG,6FACzBa,EADyB,UAChBH,EADgB,uCACuBD,GADvB,SAERK,EAAAA,EAAAA,IAAUD,GAFF,cAEzBE,EAFyB,yBAGxBA,EAASb,MAHe,2CAAH,qDAMjBc,EAAe,mCAAG,WAAMC,GAAN,gFACvBJ,EADuB,UACdH,EADc,iCACmBD,EADnB,kBACoCQ,EADpC,uDAERH,EAAAA,EAAAA,IAAUD,GAFF,cAEvBK,EAFuB,yBAGtBA,EAAOhB,KAAKC,SAHU,2CAAH,sDAMfgB,EAAY,mCAAG,WAAMlC,GAAN,oFACpB4B,EADoB,UACXH,EADW,kBACOzB,EADP,oBACqBwB,GADrB,SAEHK,EAAAA,EAAAA,IAAUD,GAFP,uBAElBX,EAFkB,EAElBA,MACFgB,EAASE,EAASlB,IACjBmB,OAASH,EAAOG,OAAOrC,KAAI,SAAAsC,GAAK,OAAIA,EAAMC,IAAV,IAJb,kBAKnBL,GALmB,2CAAH,sDAQZM,EAAmB,mCAAG,WAAMvC,GAAN,kFAC3B4B,EAD2B,UAClBH,EADkB,kBACAzB,EADA,4BACsBwB,GADtB,SAIvBK,EAAAA,EAAAA,IAAUD,GAJa,uBAGvBY,EAHuB,EAG/BvB,KAAQuB,KAHuB,kBAK1BA,EAAKzC,IAAI0C,IALiB,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAM1C,GAAN,oFAC3B4B,EAD2B,UAClBH,EADkB,kBACAzB,EADA,4BACsBwB,GADtB,SAIvBK,EAAAA,EAAAA,IAAUD,GAJa,uBAGvBV,EAHuB,EAG/BD,KAAQC,QAEJyB,EAAUzB,EAAQnB,KAAI,YAC1B,MAAO,CAAE6C,OAD0C,EAAtBA,OACZC,QADkC,EAAdA,QAEtC,IAPgC,kBAQ1BF,GAR0B,2CAAH,sDAW1BR,EAAW,SAAAW,GACf,IAAIb,EAASc,OAAOC,OAAO,CAAC,EAAGF,GAQ/B,OAPIb,EAAOhC,YACTgC,EAAOhC,YAAc0B,EAAeM,EAAOhC,YACxCgC,EAAOhC,YAAcyB,EAC1BO,EAAOgB,aAAgBhB,EAAOiB,aAE1BjB,EAAOiB,aAAaC,MAAM,EAAG,GAD7B,UAEJlB,EAAOmB,aAAP,UAA+C,GAAtBnB,EAAOmB,aAAhC,KACOnB,CACR,EAEKQ,EAAU,SAAC,GAAkD,IAAhDY,EAA+C,EAA/CA,UAAWf,EAAoC,EAApCA,KAAMgB,EAA8B,EAA9BA,aAC5BC,EAAW,CAAEF,UAAAA,EAAWf,KAAAA,EAAMkB,UAD4B,EAAhBA,WAGhD,OADAD,EAASE,KAAOH,EAAe3B,EAAe2B,EAAe5B,EACtD6B,CACR,C","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MovieList/MovieListstyled.js","components/MovieList/MovieList.js","pages/Home/Home.js","services/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledLoader = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\nconst Loader = () => {\n  return (\n    <StyledLoader>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"blue\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n    </StyledLoader>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Item = styled.li`\n  border-radius: 2px;\n  width: 274px;\n  height: 480px;\n  box-shadow: 0px 1px 3px 2px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 2px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Img = styled.img`\n  width: 274px;\n  height: 400px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\nexport const Title = styled.p`\n  margin: 0px;\n  padding: 10px;\n  font-size: 22px;\n  font-weight: bold;\n`;\n","import { Link } from 'react-router-dom';\nimport { List, Item, Img, Title } from 'components/MovieList/MovieListstyled';\nimport { useLocation } from 'react-router-dom';\nimport NoPoster from 'images/NoPoster.jpg';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, poster_path, title }) => {\n          const poster = poster_path\n            ? 'https://image.tmdb.org/t/p/w500/' + poster_path\n            : NoPoster;\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                <Img src={poster} alt={title} />\n                <Title>{title}</Title>\n              </Link>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { Container, HomeTitle } from 'components/App.styled';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport { getTrendingMovies } from 'services/api-service';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTrendingMovies()\n      .then(data => {\n        setMovies(data.results);\n      })\n      .catch(err => {\n        toast.error(err.message);\n      })\n\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <Container>\n      {isLoading && <Loader />}\n      <HomeTitle>Trending today</HomeTitle>\n      <MovieList movies={movies} />\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'a2131ad5d6a3f97436f48b66c08b88ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMG_PLACEHOLDER = 'https://critics.io/img/movies/poster-placeholder.png';\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport const getTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n  const result = await axios.get(url);\n  return result.data.results;\n};\n\nexport const getMovieById = async id => {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  const result = fixMovie(data);\n  result.genres = result.genres.map(genre => genre.name);\n  return result;\n};\n\nexport const getMovieCreditsById = async id => {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  const {\n    data: { cast },\n  } = await axios.get(url);\n  return cast.map(fixCast);\n};\n\nexport const getMovieReviewsById = async id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  const {\n    data: { results },\n  } = await axios.get(url);\n  const reviews = results.map(({ author, content }) => {\n    return { author, content };\n  });\n  return reviews;\n};\n\nconst fixMovie = movie => {\n  let result = Object.assign({}, movie);\n  if (result.poster_path)\n    result.poster_path = IMG_BASE_URL + result.poster_path;\n  else result.poster_path = IMG_PLACEHOLDER;\n  result.release_year = !result.release_date\n    ? 'Unknown'\n    : result.release_date.slice(0, 4);\n  result.vote_average = `${result.vote_average * 10}%`;\n  return result;\n};\n\nconst fixCast = ({ credit_id, name, profile_path, character }) => {\n  const newActor = { credit_id, name, character };\n  newActor.path = profile_path ? IMG_BASE_URL + profile_path : IMG_PLACEHOLDER;\n  return newActor;\n};\n"],"names":["StyledLoader","styled","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","List","Item","Img","Title","movies","location","useLocation","map","id","poster_path","title","poster","NoPoster","to","state","from","src","alt","useState","setMovies","isLoading","setIsLoading","useEffect","getTrendingMovies","then","data","results","catch","err","toast","message","finally","API_KEY","BASE_URL","IMG_PLACEHOLDER","IMG_BASE_URL","url","axios","response","getSearchMovies","query","result","getMovieById","fixMovie","genres","genre","name","getMovieCreditsById","cast","fixCast","getMovieReviewsById","reviews","author","content","movie","Object","assign","release_year","release_date","slice","vote_average","credit_id","profile_path","newActor","character","path"],"sourceRoot":""}