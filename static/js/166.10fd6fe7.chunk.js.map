{"version":3,"file":"static/js/166.10fd6fe7.chunk.js","mappings":"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","sources":["components/Movies/Movies.js","services/api-service.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport toast from 'react-hot-toast';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { getSearchMovies } from 'services/api-service';\n\nexport default function Movies() {\n  const [searchMovies, setSearchMovies] = useState('');\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const search = useLocation().search;\n  const query = new URLSearchParams(search).get('query');\n\n  const handleQueryChange = e => {\n    const value = e.target.value.toLowerCase();\n    setSearchMovies(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchMovies.trim() === '') {\n      toast.error(`Please enter query`);\n      return;\n    }\n    getSearchMovies(searchMovies)\n      .then(movies => {\n        setMovies(movies);\n        navigate(`/movies?query=${searchMovies}`);\n      })\n      .catch(err => {\n        toast.error(err.message);\n      });\n    setSearchMovies('');\n  };\n\n  useEffect(() => {\n    if (searchMovies || searchMovies === query) {\n      return;\n    }\n    if (!query) {\n      return;\n    }\n    getSearchMovies(query)\n      .then(movies => {\n        setMovies(movies);\n      })\n      .catch(err => {\n        toast.error(err.message);\n      });\n    setSearchMovies('');\n  }, [query, searchMovies]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">\n          <FiSearch />\n        </button>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={searchMovies}\n          onChange={handleQueryChange}\n        />\n      </form>\n      {movies?.length > 0 && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'a2131ad5d6a3f97436f48b66c08b88ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMG_PLACEHOLDER = 'https://critics.io/img/movies/poster-placeholder.png';\n\nexport const getTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n  const result = await axios.get(url);\n  return result.data.results;\n};\n\nexport const getMovieById = async id => {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  const result = fixMovie(data);\n  result.genres = result.genres.map(genre => genre.name);\n  return result;\n};\n\nexport const getMovieCreditsById = async id => {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  const {\n    data: { cast },\n  } = await axios.get(url);\n  return cast.map(fixCast);\n};\n\nexport const getMovieReviewsById = async id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  const {\n    data: { results },\n  } = await axios.get(url);\n  const reviews = results.map(({ author, content }) => {\n    return { author, content };\n  });\n  return reviews;\n};\n\nconst fixMovie = movie => {\n  let result = Object.assign({}, movie);\n  if (result.poster_path)\n    result.poster_path = 'https://image.tmdb.org/t/p/w500' + result.poster_path;\n  else result.poster_path = IMG_PLACEHOLDER;\n  result.release_year = !result.release_date\n    ? 'Unknown'\n    : result.release_date.slice(0, 4);\n  result.vote_average = `${result.vote_average * 10}%`;\n  return result;\n};\n\nconst fixCast = ({ credit_id, name, profile_path, character }) => {\n  const newActor = { credit_id, name, character };\n  newActor.path = profile_path\n    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n    : IMG_PLACEHOLDER;\n  return newActor;\n};\n"],"names":["Movies","useState","searchMovies","setSearchMovies","movies","setMovies","navigate","useNavigate","location","useLocation","search","query","URLSearchParams","get","useEffect","getSearchMovies","then","catch","err","toast","message","onSubmit","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","value","onChange","target","toLowerCase","length","map","id","title","to","state","from","API_KEY","BASE_URL","IMG_PLACEHOLDER","getTrendingMovies","url","axios","response","data","result","results","getMovieById","fixMovie","genres","genre","name","getMovieCreditsById","cast","fixCast","getMovieReviewsById","reviews","author","content","movie","Object","assign","poster_path","release_year","release_date","slice","vote_average","credit_id","profile_path","newActor","character","path"],"sourceRoot":""}