{"version":3,"file":"static/js/968.150d56ff.chunk.js","mappings":"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","sources":["components/Home/Home.styled.js","components/Home/Home.js","services/api-service.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Item = styled.li`\n  border-radius: 2px;\n  width: 274px;\n  height: 460px;\n  box-shadow: 0px 1px 3px 2px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 2px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Img = styled.img`\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\nexport const Title = styled.p`\n  margin: 0;\n  font-size: 20px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { List, Item, Img, Title } from './Home.styled';\nimport { Link } from 'react-router-dom';\n\nimport { getTrendingMovies } from 'services/api-service';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      const { results } = await getTrendingMovies();\n      setMovies(results);\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2>Trending today</h2>\n      {movies.length > 0 && (\n        <List>\n          {movies.map(({ id, poster_path, title }) => {\n            return (\n              <Item key={id}>\n                <Link to={`/movies/${id}`}>\n                  <Img\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                    alt={title}\n                  />\n                  <Title>{title}</Title>\n                </Link>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'a2131ad5d6a3f97436f48b66c08b88ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMG_PLACEHOLDER = 'https://critics.io/img/movies/poster-placeholder.png';\n\nexport const getTrendingMovies = async () => {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const getSearchMovies = async query => {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`;\n  const result = await axios.get(url);\n  return result.data.results;\n};\n\nexport const getMovieById = async id => {\n  const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n  const { data } = await axios.get(url);\n  const result = fixMovie(data);\n  result.genres = result.genres.map(genre => genre.name);\n  return result;\n};\n\nexport const getMovieCreditsById = async id => {\n  const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n  const {\n    data: { cast },\n  } = await axios.get(url);\n  return cast.map(fixCast);\n};\n\nexport const getMovieReviewsById = async id => {\n  const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n  const {\n    data: { results },\n  } = await axios.get(url);\n  const reviews = results.map(({ author, content }) => {\n    return { author, content };\n  });\n  return reviews;\n};\n\nconst fixMovie = movie => {\n  let result = Object.assign({}, movie);\n  if (result.poster_path)\n    result.poster_path = 'https://image.tmdb.org/t/p/w500' + result.poster_path;\n  else result.poster_path = IMG_PLACEHOLDER;\n  result.release_year = !result.release_date\n    ? 'Unknown'\n    : result.release_date.slice(0, 4);\n  result.vote_average = `${result.vote_average * 10}%`;\n  return result;\n};\n\nconst fixCast = ({ credit_id, name, profile_path, character }) => {\n  const newActor = { credit_id, name, character };\n  newActor.path = profile_path\n    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n    : IMG_PLACEHOLDER;\n  return newActor;\n};\n"],"names":["List","styled","Item","Img","Title","Home","useState","movies","setMovies","useEffect","getMovies","getTrendingMovies","results","length","map","id","poster_path","title","to","src","alt","API_KEY","BASE_URL","IMG_PLACEHOLDER","url","axios","response","data","getSearchMovies","query","result","getMovieById","fixMovie","genres","genre","name","getMovieCreditsById","cast","fixCast","getMovieReviewsById","reviews","author","content","movie","Object","assign","release_year","release_date","slice","vote_average","credit_id","profile_path","newActor","character","path"],"sourceRoot":""}